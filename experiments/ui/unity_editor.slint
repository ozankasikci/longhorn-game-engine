import { Button, VerticalBox, HorizontalBox, ListView, LineEdit, CheckBox, ComboBox, Slider, ScrollView, GroupBox } from "std-widgets.slint";

export struct GameObject {
    id: int,
    name: string,
    position_x: float,
    position_y: float,
    position_z: float,
    rotation_x: float,
    rotation_y: float,
    rotation_z: float,
    scale_x: float,
    scale_y: float,
    scale_z: float,
    active: bool,
}

export struct ConsoleMessage {
    message: string,
    message_type: string,
    timestamp: string,
}

component MenuBar inherits Rectangle {
    height: 30px;
    background: #3c3c3c;
    
    callback file-new();
    callback file-open();
    callback file-save();
    callback edit-undo();
    callback edit-redo();
    callback gameobject-create-empty();
    callback gameobject-create-cube();
    callback window-console();
    callback help-about();
    
    HorizontalBox {
        padding: 4px;
        spacing: 10px;
        
        Rectangle {
            width: 40px;
            height: 22px;
            background: file-touch.has-hover ? #5a5a5a : transparent;
            
            TouchArea {
                file-touch := TouchArea {}
            }
            
            Text {
                text: "File";
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        Rectangle {
            width: 40px;
            height: 22px;
            background: edit-touch.has-hover ? #5a5a5a : transparent;
            
            TouchArea {
                edit-touch := TouchArea {}
            }
            
            Text {
                text: "Edit";
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        Rectangle {
            width: 80px;
            height: 22px;
            background: gameobject-touch.has-hover ? #5a5a5a : transparent;
            
            TouchArea {
                gameobject-touch := TouchArea {}
            }
            
            Text {
                text: "GameObject";
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        Rectangle {
            width: 60px;
            height: 22px;
            background: window-touch.has-hover ? #5a5a5a : transparent;
            
            TouchArea {
                window-touch := TouchArea {}
            }
            
            Text {
                text: "Window";
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        Rectangle {
            width: 40px;
            height: 22px;
            background: help-touch.has-hover ? #5a5a5a : transparent;
            
            TouchArea {
                help-touch := TouchArea {}
            }
            
            Text {
                text: "Help";
                color: white;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
    }
}

component ToolBar inherits Rectangle {
    height: 40px;
    background: #4a4a4a;
    
    callback tool-select();
    callback tool-move();
    callback tool-rotate();
    callback tool-scale();
    
    HorizontalBox {
        padding: 5px;
        spacing: 5px;
        
        Button {
            text: "üîç";
            max-width: 30px;
            clicked => { tool-select(); }
        }
        
        Button {
            text: "‚Üî";
            max-width: 30px;
            clicked => { tool-move(); }
        }
        
        Button {
            text: "üîÑ";
            max-width: 30px;
            clicked => { tool-rotate(); }
        }
        
        Button {
            text: "‚öè";
            max-width: 30px;
            clicked => { tool-scale(); }
        }
        
        Rectangle { /* spacer */ }
        
        Button {
            text: "‚ñ∂";
            max-width: 30px;
        }
        
        Button {
            text: "‚è∏";
            max-width: 30px;
        }
        
        Button {
            text: "‚èπ";
            max-width: 30px;
        }
    }
}

component HierarchyPanel inherits Rectangle {
    background: #2d2d2d;
    
    in property <[GameObject]> objects: [];
    in property <int> selected-object: -1;
    callback object-selected(int);
    callback object-create();
    callback object-delete();
    
    VerticalBox {
        padding: 5px;
        
        Rectangle {
            height: 25px;
            background: #3c3c3c;
            
            Text {
                text: "Hierarchy";
                color: white;
                font-weight: 700;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        HorizontalBox {
            height: 25px;
            spacing: 5px;
            
            Button {
                text: "+";
                max-width: 25px;
                clicked => { object-create(); }
            }
            
            Button {
                text: "-";
                max-width: 25px;
                clicked => { object-delete(); }
            }
        }
        
        ScrollView {
            ListView {
                for obj[index] in objects: Rectangle {
                    height: 20px;
                    background: selected-object == index ? #0078d4 : (touch.has-hover ? #404040 : transparent);
                    
                    TouchArea {
                        touch := TouchArea {
                            clicked => { object-selected(index); }
                        }
                    }
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: obj.active ? "üëÅ" : "üö´";
                            font-size: 10px;
                            vertical-alignment: center;
                        }
                        
                        Text {
                            text: obj.name;
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                        }
                    }
                }
            }
        }
    }
}

component SceneView inherits Rectangle {
    background: #1e1e1e;
    
    callback scene-clicked(float, float);
    
    Rectangle {
        background: #333;
        
        TouchArea {
            clicked => { scene-clicked(self.mouse-x / 1px, self.mouse-y / 1px); }
        }
        
        // Scene view overlay
        Rectangle {
            x: 10px;
            y: 10px;
            width: 100px;
            height: 60px;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 5px;
            
            VerticalBox {
                padding: 5px;
                
                Text {
                    text: "Scene View";
                    color: white;
                    font-size: 10px;
                    font-weight: 700;
                }
                
                Text {
                    text: "üìπ Persp";
                    color: #aaa;
                    font-size: 9px;
                }
                
                Text {
                    text: "üéØ Camera";
                    color: #aaa;
                    font-size: 9px;
                }
            }
        }
        
        // Grid center indicator
        Rectangle {
            x: parent.width / 2 - 5px;
            y: parent.height / 2 - 5px;
            width: 10px;
            height: 10px;
            background: #ff6b6b;
            border-radius: 5px;
        }
    }
}

component InspectorPanel inherits Rectangle {
    background: #2d2d2d;
    
    in property <GameObject> selected-object;
    in property <bool> has-selection: false;
    
    callback property-changed(string, string);
    
    VerticalBox {
        padding: 5px;
        
        Rectangle {
            height: 25px;
            background: #3c3c3c;
            
            Text {
                text: "Inspector";
                color: white;
                font-weight: 700;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 12px;
            }
        }
        
        if has-selection: ScrollView {
            VerticalBox {
                spacing: 10px;
                
                // Object name
                GroupBox {
                    title: "GameObject";
                    
                    VerticalBox {
                        spacing: 5px;
                        
                        HorizontalBox {
                            Text {
                                text: "Name:";
                                color: white;
                                font-size: 11px;
                                width: 60px;
                            }
                            
                            LineEdit {
                                text: selected-object.name;
                                font-size: 11px;
                            }
                        }
                        
                        HorizontalBox {
                            CheckBox {
                                text: "Active";
                                checked: selected-object.active;
                            }
                        }
                    }
                }
                
                // Transform
                GroupBox {
                    title: "Transform";
                    
                    VerticalBox {
                        spacing: 5px;
                        
                        // Position
                        Text {
                            text: "Position";
                            color: white;
                            font-size: 10px;
                            font-weight: 700;
                        }
                        
                        HorizontalBox {
                            spacing: 5px;
                            
                            Text { text: "X:"; color: #ff6b6b; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.position-x; font-size: 9px; }
                            Text { text: "Y:"; color: #51cf66; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.position-y; font-size: 9px; }
                            Text { text: "Z:"; color: #339af0; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.position-z; font-size: 9px; }
                        }
                        
                        // Rotation
                        Text {
                            text: "Rotation";
                            color: white;
                            font-size: 10px;
                            font-weight: 700;
                        }
                        
                        HorizontalBox {
                            spacing: 5px;
                            
                            Text { text: "X:"; color: #ff6b6b; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.rotation-x; font-size: 9px; }
                            Text { text: "Y:"; color: #51cf66; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.rotation-y; font-size: 9px; }
                            Text { text: "Z:"; color: #339af0; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.rotation-z; font-size: 9px; }
                        }
                        
                        // Scale
                        Text {
                            text: "Scale";
                            color: white;
                            font-size: 10px;
                            font-weight: 700;
                        }
                        
                        HorizontalBox {
                            spacing: 5px;
                            
                            Text { text: "X:"; color: #ff6b6b; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.scale-x; font-size: 9px; }
                            Text { text: "Y:"; color: #51cf66; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.scale-y; font-size: 9px; }
                            Text { text: "Z:"; color: #339af0; font-size: 9px; width: 15px; }
                            LineEdit { text: selected-object.scale-z; font-size: 9px; }
                        }
                    }
                }
            }
        }
        
        if !has-selection: Rectangle {
            Text {
                text: "No object selected";
                color: #888;
                horizontal-alignment: center;
                vertical-alignment: center;
                font-size: 11px;
            }
        }
    }
}

component ConsolePanel inherits Rectangle {
    background: #2d2d2d;
    
    in property <[ConsoleMessage]> messages: [];
    callback clear-console();
    
    VerticalBox {
        padding: 5px;
        
        Rectangle {
            height: 25px;
            background: #3c3c3c;
            
            HorizontalBox {
                Text {
                    text: "Console";
                    color: white;
                    font-weight: 700;
                    horizontal-alignment: left;
                    vertical-alignment: center;
                    font-size: 12px;
                }
                
                Rectangle { /* spacer */ }
                
                Button {
                    text: "Clear";
                    max-width: 50px;
                    max-height: 20px;
                    clicked => { clear-console(); }
                }
            }
        }
        
        ScrollView {
            ListView {
                for msg[index] in messages: Rectangle {
                    height: 16px;
                    background: Math.mod(index, 2) == 0 ? #333 : transparent;
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: msg.message-type == "Error" ? "‚ùå" : (msg.message-type == "Warning" ? "‚ö†Ô∏è" : "‚ÑπÔ∏è");
                            font-size: 10px;
                            vertical-alignment: center;
                            width: 20px;
                        }
                        
                        Text {
                            text: msg.message;
                            color: msg.message-type == "Error" ? #ff6b6b : (msg.message-type == "Warning" ? #ffd43b : white);
                            font-size: 10px;
                            vertical-alignment: center;
                        }
                        
                        Rectangle { /* spacer */ }
                        
                        Text {
                            text: msg.timestamp;
                            color: #888;
                            font-size: 8px;
                            vertical-alignment: center;
                            width: 60px;
                        }
                    }
                }
            }
        }
    }
}

component ProjectPanel inherits Rectangle {
    background: #2d2d2d;
    
    callback asset-selected(string);
    callback asset-imported();
    
    VerticalBox {
        padding: 5px;
        
        Rectangle {
            height: 25px;
            background: #3c3c3c;
            
            HorizontalBox {
                Text {
                    text: "Project";
                    color: white;
                    font-weight: 700;
                    horizontal-alignment: left;
                    vertical-alignment: center;
                    font-size: 12px;
                }
                
                Rectangle { /* spacer */ }
                
                Button {
                    text: "Import";
                    max-width: 50px;
                    max-height: 20px;
                    clicked => { asset-imported(); }
                }
            }
        }
        
        ScrollView {
            VerticalBox {
                // Sample assets
                Rectangle {
                    height: 20px;
                    background: asset-touch1.has-hover ? #404040 : transparent;
                    
                    TouchArea {
                        asset-touch1 := TouchArea {
                            clicked => { asset-selected("Scripts"); }
                        }
                    }
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: "üìÅ Scripts";
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                        }
                    }
                }
                
                Rectangle {
                    height: 20px;
                    background: asset-touch2.has-hover ? #404040 : transparent;
                    
                    TouchArea {
                        asset-touch2 := TouchArea {
                            clicked => { asset-selected("Materials"); }
                        }
                    }
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: "üìÅ Materials";
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                        }
                    }
                }
                
                Rectangle {
                    height: 20px;
                    background: asset-touch3.has-hover ? #404040 : transparent;
                    
                    TouchArea {
                        asset-touch3 := TouchArea {
                            clicked => { asset-selected("Textures"); }
                        }
                    }
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: "üìÅ Textures";
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                        }
                    }
                }
                
                Rectangle {
                    height: 20px;
                    background: asset-touch4.has-hover ? #404040 : transparent;
                    
                    TouchArea {
                        asset-touch4 := TouchArea {
                            clicked => { asset-selected("Models"); }
                        }
                    }
                    
                    HorizontalBox {
                        padding-left: 5px;
                        
                        Text {
                            text: "üìÅ Models";
                            color: white;
                            font-size: 11px;
                            vertical-alignment: center;
                        }
                    }
                }
            }
        }
    }
}

export component UnityEditor inherits Window {
    title: "Unity Editor - Mobile Game Engine (Slint)";
    width: 1200px;
    height: 800px;
    background: #1e1e1e;
    
    // Properties
    in property <[GameObject]> scene-objects: [];
    in property <int> selected-object-index: -1;
    in property <[ConsoleMessage]> console-messages: [];
    
    // Callbacks
    callback object-selected(int);
    callback object-created();
    callback object-deleted();
    callback scene-clicked(float, float);
    callback tool-selected(string);
    callback console-cleared();
    callback asset-selected(string);
    callback property-changed(string, string);
    
    VerticalBox {
        // Menu bar
        MenuBar {
            file-new => { /* TODO */ }
            file-open => { /* TODO */ }
            file-save => { /* TODO */ }
            edit-undo => { /* TODO */ }
            edit-redo => { /* TODO */ }
            gameobject-create-empty => { object-created(); }
            gameobject-create-cube => { object-created(); }
            window-console => { /* TODO */ }
            help-about => { /* TODO */ }
        }
        
        // Tool bar
        ToolBar {
            tool-select => { tool-selected("select"); }
            tool-move => { tool-selected("move"); }
            tool-rotate => { tool-selected("rotate"); }
            tool-scale => { tool-selected("scale"); }
        }
        
        // Main content area
        HorizontalBox {
            // Left panel - Hierarchy
            HierarchyPanel {
                width: 250px;
                objects: scene-objects;
                selected-object: selected-object-index;
                object-selected(index) => { object-selected(index); }
                object-create => { object-created(); }
                object-delete => { object-deleted(); }
            }
            
            // Center area
            VerticalBox {
                // Scene view
                SceneView {
                    scene-clicked(x, y) => { scene-clicked(x, y); }
                }
                
                // Bottom panels
                HorizontalBox {
                    height: 200px;
                    
                    // Console
                    ConsolePanel {
                        messages: console-messages;
                        clear-console => { console-cleared(); }
                    }
                    
                    // Project browser
                    ProjectPanel {
                        width: 300px;
                        asset-selected(name) => { asset-selected(name); }
                        asset-imported => { /* TODO */ }
                    }
                }
            }
            
            // Right panel - Inspector
            InspectorPanel {
                width: 300px;
                selected-object: selected-object-index >= 0 && selected-object-index < scene-objects.length ? 
                    scene-objects[selected-object-index] : {
                        id: 0, name: "", position-x: 0, position-y: 0, position-z: 0,
                        rotation-x: 0, rotation-y: 0, rotation-z: 0,
                        scale-x: 1, scale-y: 1, scale-z: 1, active: true
                    };
                has-selection: selected-object-index >= 0;
                property-changed(prop, value) => { property-changed(prop, value); }
            }
        }
    }
}